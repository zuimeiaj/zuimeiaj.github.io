(self["webpackChunkaj_antd_components_test"]=self["webpackChunkaj_antd_components_test"]||[]).push([[2590,4015,8280],{66837:function(){(function(e,t){"use strict";var n="hljs-ln",r="hljs-ln-line",a="hljs-ln-code",s="hljs-ln-numbers",i="hljs-ln-n",o="data-line-number",l=/\r\n|\r|\n/g;function c(e){var t=e;while(t){if(t.className&&-1!==t.className.indexOf("hljs-ln-code"))return!0;t=t.parentNode}return!1}function u(e){var t=e;while("TABLE"!==t.nodeName)t=t.parentNode;return t}function d(e){var t=e.toString(),n=e.anchorNode;while("TD"!==n.nodeName)n=n.parentNode;var r=e.focusNode;while("TD"!==r.nodeName)r=r.parentNode;var s=parseInt(n.dataset.lineNumber),i=parseInt(r.dataset.lineNumber);if(s!=i){var l=n.textContent,c=r.textContent;if(s>i){var d=s;s=i,i=d,d=l,l=c,c=d}while(0!==t.indexOf(l))l=l.slice(1);while(-1===t.lastIndexOf(c))c=c.slice(0,-1);for(var h=l,p=u(n),m=s+1;m<i;++m){var f=k('.{0}[{1}="{2}"]',[a,o,m]),g=p.querySelector(f);h+="\n"+g.textContent}return h+="\n"+c,h}return t}function h(){var e=t.createElement("style");e.type="text/css",e.innerHTML=k(".{0}{border-collapse:collapse}.{0} td{padding:0}.{1}:before{content:attr({2})}",[n,i,o]),t.getElementsByTagName("head")[0].appendChild(e)}function p(n){"interactive"===t.readyState||"complete"===t.readyState?m(n):e.addEventListener("DOMContentLoaded",(function(){m(n)}))}function m(n){try{var r=t.querySelectorAll("code.hljs,code.nohighlight");for(var a in r)r.hasOwnProperty(a)&&(f(r[a])||g(r[a],n))}catch(s){e.console.error("LineNumbers error: ",s)}}function f(e){return e.classList.contains("nohljsln")}function g(e,t){"object"===typeof e&&_((function(){e.innerHTML=b(e,t)}))}function v(e,t){if("string"===typeof e){var n=document.createElement("code");return n.innerHTML=e,b(n,t)}}function b(e,t){var n=y(e,t);return j(e),w(e.innerHTML,n)}function w(e,t){var l=T(e);if(""===l[l.length-1].trim()&&l.pop(),l.length>1||t.singleLine){for(var c="",u=0,d=l.length;u<d;u++)c+=k('<tr><td class="{0} {1}" {3}="{5}"><div class="{2}" {3}="{5}"></div></td><td class="{0} {4}" {3}="{5}">{6}</td></tr>',[r,s,i,o,a,u+t.startFrom,l[u].length>0?l[u]:" "]);return k('<table class="{0}">{1}</table>',[n,c])}return e}function y(e,t){return t=t||{},{singleLine:N(t),startFrom:L(e,t)}}function N(e){var t=!1;return e.singleLine?e.singleLine:t}function L(e,t){var n=1,r=n;isFinite(t.startFrom)&&(r=t.startFrom);var a=C(e,"data-ln-start-from");return null!==a&&(r=F(a,n)),r}function j(e){var t=e.childNodes;for(var n in t)if(t.hasOwnProperty(n)){var r=t[n];S(r.textContent)>0&&(r.childNodes.length>0?j(r):x(r.parentNode))}}function x(e){var t=e.className;if(/hljs-/.test(t)){for(var n=T(e.innerHTML),r=0,a="";r<n.length;r++){var s=n[r].length>0?n[r]:" ";a+=k('<span class="{0}">{1}</span>\n',[t,s])}e.innerHTML=a.trim()}}function T(e){return 0===e.length?[]:e.split(l)}function S(e){return(e.trim().match(l)||[]).length}function _(t){e.setTimeout(t,0)}function k(e,t){return e.replace(/\{(\d+)\}/g,(function(e,n){return void 0!==t[n]?t[n]:e}))}function C(e,t){return e.hasAttribute(t)?e.getAttribute(t):null}function F(e,t){if(!e)return t;var n=Number(e);return isFinite(n)?n:t}e.hljs?(e.hljs.initLineNumbersOnLoad=p,e.hljs.lineNumbersBlock=g,e.hljs.lineNumbersValue=v,h()):e.console.error("highlight.js not detected!"),document.addEventListener("copy",(function(e){var t,n=window.getSelection();c(n.anchorNode)&&(t=-1!==window.navigator.userAgent.indexOf("Edge")?d(n):n.toString(),e.clipboardData.setData("text/plain",t),e.preventDefault())}))})(window,document)},4015:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return h}});n(49282);var r,a,s=n(97152),i=(n(54287),n(62746)),o=(n(66837),n(63453)),l={props:{path:String,value:String,title:{type:String,default:"示例代码"}},data(){return{code:"",loading:!0,show:!1}},watch:{value(e){this.code=e}},methods:{copy(){let e=o.CommonUtils.copyToClipboard(this.code);e&&this.$message.success("复制成功")}},async created(){let e=this.path;if(this.path){const t=await fetch("/biz/docs/"+e).then((e=>e.text()));this.code=t}else this.code=this.value;this.loading=!1,this.$nextTick((()=>{window.hljs.initLineNumbersOnLoad()}))},render(){const e=arguments[0];return console.log(this.code),e(s.Z,{attrs:{spinning:this.loading},class:"preview-code"},[e("div",{class:["wrapper",{show:this.show}]},[e("h4",{class:"preview-code-title"},[this.title]),this.code&&e("pre",{directives:[{name:"highlightjs",value:this.code}]},[e("code",{class:"tsx"})])]),e("div",{on:{click:()=>this.show=!this.show},class:"trigger"},[e(i.Z,{attrs:{type:"arrow-"+(this.show?"up":"down")}}),e("span",[this.show?"收起":"展开"])])])}},c=l,u=n(43736),d=(0,u.Z)(c,r,a,!1,null,null,null),h=d.exports},78280:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return c}});var r,a,s={props:["title","description"],render(){const e=arguments[0];return e("div",{class:"app-page gutter common-page"},[e("h3",{class:"app-page-title"},[this.title]),e("div",{class:"page-description"},[this.description]),e("div",{class:"page-content"},[this.$slots.default])])}},i=s,o=n(43736),l=(0,o.Z)(i,r,a,!1,null,null,null),c=l.exports},42590:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return d}});var r,a,s=n(4015),i=n(78280),o={render(){const e=arguments[0];return e(i["default"],{attrs:{title:"简介",description:"组件库基于ant-design-vue二次开发，主要是render函数 JSX开发"}},[e("h3",["安装"]),e("p",["npm install aj-antd-components --save"]),e(s["default"],{attrs:{title:"使用",value:"\n\n        import vue from 'vue'\n        import AComponents from 'aj-antd-components'\n        import 'aj-antd-components/dist/antd.min.css'\n        import 'ant-design-vue/dist/css'\n      \n\n        vue.use(AComponents,{\n            time:{\n                iso:false // 默认日期组件值为 iso格式\n            },\n            select:{\n                // select 的handler属性对应这里的实现，返回一个promise，需要resolve一个包含label和value的对象数组\n                handler:()=> Promise.resolve([{label:string;value:string;}])\n            },\n            cascader:{\n                // 同select的handler，这里的级联使用children字段\n                handler:()=>Promise.resolve([{label:string;value:strin;children:[{...}]}])\n            },\n            table:{\n                page:{\n                    // 每页显示条数\n                    limit:20,\n                    // 默认第一页\n                    page:1\n                },\n                // DataTable组件，这里是请求的具体实现，返回一个 data:{list:[],total:0} 的分页数据结构，如果没有分页 data可以直接为数组\n                post:(url,params)=> Promise.resolve(\n                    {\n                        data:{\n                            list:[],\n                            total:0\n                        }\n                }),\n                // get请求，默认为post请求\n                get:(url,params)=>Promise.resolve(\n                    {\n                        data:{\n                            list:[],\n                            total:0\n                        }\n                }),\n                // 要传给到后端的值，asc |desc,在get或post中处理具体的传参\n                orderBy:()=> string\n            },\n            upload:{\n                getImageUrl:(uri)=>{\n                    return  拼接上传后返回的相对路径，一个完整的图片资源路径\n                },\n                uploadFile:(file)=>{\n                     const res= await 具体的上传函数\n                     return 文件上传后的相对路径\n                }\n            },\n            richtext:()=>{\n                return {\n                    // 富文本自定义上传图片\n                    customUploadImg:(files,insertFu)=>{\n                        const  res= await 上传函数\n                        // 将上传后返回的路径，完整的资源路径传入到insertFu\n                        insertFu()\n                    },\n                    fontNames:[\"微软雅黑\",....],// 支持的字体\n                }\n            },\n        \n        })\n\n        // 如果需要使用字典，需要在store中实现名为“dictionaries”的getter\n        store.getters.dictionaries:()=> ({\n            // 需要同时实现枚举类型的 map对象和_array数组，才能正确映射\n            // 对象的key为枚举字段的value，值为label，主要是方便根据枚举值映射label\n            enum_type_key:{value:label},\n            // 数组在枚举类型后拼接_array ,用于下拉，checkbox，radio等用途\n            enum_type_key_array:[{label:'',value:string;}]\n        })\n\n        "}}),e(s["default"],{attrs:{title:"Props",path:"install.d.ts"}}),e("h3",["特色"]),e("p",["表单、搜索列表页面，是管理系统中最常见的组件，几乎占比80%。使用JSON配置的方式能使代码降低，效率提高，极少的人力就可以支撑业务快速发展",e("br"),"以下组件是系统开发过程中使用最多的组件"]),e("h3",["表单组件（FormLayout）内置16个常用组件"]),e("p",["支持组件联动隐藏显示、联动组件值变化、动态数组删减(type=arrayList)、快速的必填验证、支持自定义渲染、注册自定义组件"]),e("h3",["输入框（Input）"]),e("p",["支持多种类型的强制校验，number，amount、percentage、text。 由于后端在金额时通常以分来存储数据，其中amount 会自动转为分，percentage会转为浮点数，避免数据繁琐的转换操作。另外新增了showLimit显示当前输入字符数和总的字符数，在输入手机号，身份证号码时使用较多"]),e("h3",["数据选择（DataSelect）"]),e("p",["支持多种数据源，自定义接口实现（handler），枚举字段（store.getters.dictionaries中实现），直接传入数组",e("br"),"通过接口或者枚举来实现数据源，能更好的将组件模块化，减少业务代码量",e("br"),"通过配置displayStyle= checkbox | radio | select（默认）来展示显示类型"]),e("h3",["搜索列表页面(FormTableLayout)"]),e("p",["通过配置接口地址和表头、搜索项、操作项、状态分组tabs就能快速高效的完成页面开发"])])}},l=o,c=n(43736),u=(0,c.Z)(l,r,a,!1,null,null,null),d=u.exports},49282:function(e,t,n){"use strict";n(54287)}}]);
//# sourceMappingURL=2590.d36d8e2a.js.map