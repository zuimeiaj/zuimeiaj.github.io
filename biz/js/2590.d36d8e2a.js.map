{"version":3,"file":"js/2590.d36d8e2a.js","mappings":"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","sources":["webpack://aj-antd-components-test/./node_modules/.store/highlightjs-line-numbers.js@2.8.0/node_modules/highlightjs-line-numbers.js/src/highlightjs-line-numbers.js","webpack://aj-antd-components-test/./src/pages/CommonCodeHighlight.vue","webpack://aj-antd-components-test/src/pages/CommonCodeHighlight.vue","webpack://aj-antd-components-test/./src/pages/CommonCodeHighlight.vue?b9f2","webpack://aj-antd-components-test/src/pages/CommonPage.vue","webpack://aj-antd-components-test/./src/pages/CommonPage.vue","webpack://aj-antd-components-test/./src/pages/CommonPage.vue?73ca","webpack://aj-antd-components-test/./src/pages/guide.vue","webpack://aj-antd-components-test/src/pages/guide.vue","webpack://aj-antd-components-test/./src/pages/guide.vue?4428"],"sourcesContent":["// jshint multistr:true\n\n(function (w, d) {\n    'use strict';\n\n    var TABLE_NAME = 'hljs-ln',\n        LINE_NAME = 'hljs-ln-line',\n        CODE_BLOCK_NAME = 'hljs-ln-code',\n        NUMBERS_BLOCK_NAME = 'hljs-ln-numbers',\n        NUMBER_LINE_NAME = 'hljs-ln-n',\n        DATA_ATTR_NAME = 'data-line-number',\n        BREAK_LINE_REGEXP = /\\r\\n|\\r|\\n/g;\n\n    if (w.hljs) {\n        w.hljs.initLineNumbersOnLoad = initLineNumbersOnLoad;\n        w.hljs.lineNumbersBlock = lineNumbersBlock;\n        w.hljs.lineNumbersValue = lineNumbersValue;\n\n        addStyles();\n    } else {\n        w.console.error('highlight.js not detected!');\n    }\n\n    function isHljsLnCodeDescendant(domElt) {\n        var curElt = domElt;\n        while (curElt) {\n            if (curElt.className && curElt.className.indexOf('hljs-ln-code') !== -1) {\n                return true;\n            }\n            curElt = curElt.parentNode;\n        }\n        return false;\n    }\n\n    function getHljsLnTable(hljsLnDomElt) {\n        var curElt = hljsLnDomElt;\n        while (curElt.nodeName !== 'TABLE') {\n            curElt = curElt.parentNode;\n        }\n        return curElt;\n    }\n\n    // Function to workaround a copy issue with Microsoft Edge.\n    // Due to hljs-ln wrapping the lines of code inside a <table> element,\n    // itself wrapped inside a <pre> element, window.getSelection().toString()\n    // does not contain any line breaks. So we need to get them back using the\n    // rendered code in the DOM as reference.\n    function edgeGetSelectedCodeLines(selection) {\n        // current selected text without line breaks\n        var selectionText = selection.toString();\n\n        // get the <td> element wrapping the first line of selected code\n        var tdAnchor = selection.anchorNode;\n        while (tdAnchor.nodeName !== 'TD') {\n            tdAnchor = tdAnchor.parentNode;\n        }\n\n        // get the <td> element wrapping the last line of selected code\n        var tdFocus = selection.focusNode;\n        while (tdFocus.nodeName !== 'TD') {\n            tdFocus = tdFocus.parentNode;\n        }\n\n        // extract line numbers\n        var firstLineNumber = parseInt(tdAnchor.dataset.lineNumber);\n        var lastLineNumber = parseInt(tdFocus.dataset.lineNumber);\n\n        // multi-lines copied case\n        if (firstLineNumber != lastLineNumber) {\n\n            var firstLineText = tdAnchor.textContent;\n            var lastLineText = tdFocus.textContent;\n\n            // if the selection was made backward, swap values\n            if (firstLineNumber > lastLineNumber) {\n                var tmp = firstLineNumber;\n                firstLineNumber = lastLineNumber;\n                lastLineNumber = tmp;\n                tmp = firstLineText;\n                firstLineText = lastLineText;\n                lastLineText = tmp;\n            }\n\n            // discard not copied characters in first line\n            while (selectionText.indexOf(firstLineText) !== 0) {\n                firstLineText = firstLineText.slice(1);\n            }\n\n            // discard not copied characters in last line\n            while (selectionText.lastIndexOf(lastLineText) === -1) {\n                lastLineText = lastLineText.slice(0, -1);\n            }\n\n            // reconstruct and return the real copied text\n            var selectedText = firstLineText;\n            var hljsLnTable = getHljsLnTable(tdAnchor);\n            for (var i = firstLineNumber + 1 ; i < lastLineNumber ; ++i) {\n                var codeLineSel = format('.{0}[{1}=\"{2}\"]', [CODE_BLOCK_NAME, DATA_ATTR_NAME, i]);\n                var codeLineElt = hljsLnTable.querySelector(codeLineSel);\n                selectedText += '\\n' + codeLineElt.textContent;\n            }\n            selectedText += '\\n' + lastLineText;\n            return selectedText;\n        // single copied line case\n        } else {\n            return selectionText;\n        }\n    }\n\n    // ensure consistent code copy/paste behavior across all browsers\n    // (see https://github.com/wcoder/highlightjs-line-numbers.js/issues/51)\n    document.addEventListener('copy', function(e) {\n        // get current selection\n        var selection = window.getSelection();\n        // override behavior when one wants to copy line of codes\n        if (isHljsLnCodeDescendant(selection.anchorNode)) {\n            var selectionText;\n            // workaround an issue with Microsoft Edge as copied line breaks\n            // are removed otherwise from the selection string\n            if (window.navigator.userAgent.indexOf('Edge') !== -1) {\n                selectionText = edgeGetSelectedCodeLines(selection);\n            } else {\n                // other browsers can directly use the selection string\n                selectionText = selection.toString();\n            }\n            e.clipboardData.setData('text/plain', selectionText);\n            e.preventDefault();\n        }\n    });\n\n    function addStyles () {\n        var css = d.createElement('style');\n        css.type = 'text/css';\n        css.innerHTML = format(\n            '.{0}{border-collapse:collapse}' +\n            '.{0} td{padding:0}' +\n            '.{1}:before{content:attr({2})}',\n        [\n            TABLE_NAME,\n            NUMBER_LINE_NAME,\n            DATA_ATTR_NAME\n        ]);\n        d.getElementsByTagName('head')[0].appendChild(css);\n    }\n\n    function initLineNumbersOnLoad (options) {\n        if (d.readyState === 'interactive' || d.readyState === 'complete') {\n            documentReady(options);\n        } else {\n            w.addEventListener('DOMContentLoaded', function () {\n                documentReady(options);\n            });\n        }\n    }\n\n    function documentReady (options) {\n        try {\n            var blocks = d.querySelectorAll('code.hljs,code.nohighlight');\n\n            for (var i in blocks) {\n                if (blocks.hasOwnProperty(i)) {\n                    if (!isPluginDisabledForBlock(blocks[i])) {\n                        lineNumbersBlock(blocks[i], options);\n                    }\n                }\n            }\n        } catch (e) {\n            w.console.error('LineNumbers error: ', e);\n        }\n    }\n\n    function isPluginDisabledForBlock(element) {\n        return element.classList.contains('nohljsln');\n    }\n\n    function lineNumbersBlock (element, options) {\n        if (typeof element !== 'object') return;\n\n        async(function () {\n            element.innerHTML = lineNumbersInternal(element, options);\n        });\n    }\n\n    function lineNumbersValue (value, options) {\n        if (typeof value !== 'string') return;\n\n        var element = document.createElement('code')\n        element.innerHTML = value\n\n        return lineNumbersInternal(element, options);\n    }\n\n    function lineNumbersInternal (element, options) {\n\n        var internalOptions = mapOptions(element, options);\n\n        duplicateMultilineNodes(element);\n\n        return addLineNumbersBlockFor(element.innerHTML, internalOptions);\n    }\n\n    function addLineNumbersBlockFor (inputHtml, options) {\n        var lines = getLines(inputHtml);\n\n        // if last line contains only carriage return remove it\n        if (lines[lines.length-1].trim() === '') {\n            lines.pop();\n        }\n\n        if (lines.length > 1 || options.singleLine) {\n            var html = '';\n\n            for (var i = 0, l = lines.length; i < l; i++) {\n                html += format(\n                    '<tr>' +\n                        '<td class=\"{0} {1}\" {3}=\"{5}\">' +\n                            '<div class=\"{2}\" {3}=\"{5}\"></div>' +\n                        '</td>' +\n                        '<td class=\"{0} {4}\" {3}=\"{5}\">' +\n                            '{6}' +\n                        '</td>' +\n                    '</tr>',\n                [\n                    LINE_NAME,\n                    NUMBERS_BLOCK_NAME,\n                    NUMBER_LINE_NAME,\n                    DATA_ATTR_NAME,\n                    CODE_BLOCK_NAME,\n                    i + options.startFrom,\n                    lines[i].length > 0 ? lines[i] : ' '\n                ]);\n            }\n\n            return format('<table class=\"{0}\">{1}</table>', [ TABLE_NAME, html ]);\n        }\n\n        return inputHtml;\n    }\n\n    /**\n     * @param {HTMLElement} element Code block.\n     * @param {Object} options External API options.\n     * @returns {Object} Internal API options.\n     */\n    function mapOptions (element, options) {\n        options = options || {};\n        return {\n            singleLine: getSingleLineOption(options),\n            startFrom: getStartFromOption(element, options)\n        };\n    }\n\n    function getSingleLineOption (options) {\n        var defaultValue = false;\n        if (!!options.singleLine) {\n            return options.singleLine;\n        }\n        return defaultValue;\n    }\n\n    function getStartFromOption (element, options) {\n        var defaultValue = 1;\n        var startFrom = defaultValue;\n\n        if (isFinite(options.startFrom)) {\n            startFrom = options.startFrom;\n        }\n\n        // can be overridden because local option is priority\n        var value = getAttribute(element, 'data-ln-start-from');\n        if (value !== null) {\n            startFrom = toNumber(value, defaultValue);\n        }\n\n        return startFrom;\n    }\n\n    /**\n     * Recursive method for fix multi-line elements implementation in highlight.js\n     * Doing deep passage on child nodes.\n     * @param {HTMLElement} element\n     */\n    function duplicateMultilineNodes (element) {\n        var nodes = element.childNodes;\n        for (var node in nodes) {\n            if (nodes.hasOwnProperty(node)) {\n                var child = nodes[node];\n                if (getLinesCount(child.textContent) > 0) {\n                    if (child.childNodes.length > 0) {\n                        duplicateMultilineNodes(child);\n                    } else {\n                        duplicateMultilineNode(child.parentNode);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * Method for fix multi-line elements implementation in highlight.js\n     * @param {HTMLElement} element\n     */\n    function duplicateMultilineNode (element) {\n        var className = element.className;\n\n        if ( ! /hljs-/.test(className)) return;\n\n        var lines = getLines(element.innerHTML);\n\n        for (var i = 0, result = ''; i < lines.length; i++) {\n            var lineText = lines[i].length > 0 ? lines[i] : ' ';\n            result += format('<span class=\"{0}\">{1}</span>\\n', [ className,  lineText ]);\n        }\n\n        element.innerHTML = result.trim();\n    }\n\n    function getLines (text) {\n        if (text.length === 0) return [];\n        return text.split(BREAK_LINE_REGEXP);\n    }\n\n    function getLinesCount (text) {\n        return (text.trim().match(BREAK_LINE_REGEXP) || []).length;\n    }\n\n    ///\n    /// HELPERS\n    ///\n\n    function async (func) {\n        w.setTimeout(func, 0);\n    }\n\n    /**\n     * {@link https://wcoder.github.io/notes/string-format-for-string-formating-in-javascript}\n     * @param {string} format\n     * @param {array} args\n     */\n    function format (format, args) {\n        return format.replace(/\\{(\\d+)\\}/g, function(m, n){\n            return args[n] !== undefined ? args[n] : m;\n        });\n    }\n\n    /**\n     * @param {HTMLElement} element Code block.\n     * @param {String} attrName Attribute name.\n     * @returns {String} Attribute value or empty.\n     */\n    function getAttribute (element, attrName) {\n        return element.hasAttribute(attrName) ? element.getAttribute(attrName) : null;\n    }\n\n    /**\n     * @param {String} str Source string.\n     * @param {Number} fallback Fallback value.\n     * @returns Parsed number or fallback value.\n     */\n    function toNumber (str, fallback) {\n        if (!str) return fallback;\n        var number = Number(str);\n        return isFinite(number) ? number : fallback;\n    }\n\n}(window, document));\n","var render, staticRenderFns\nimport script from \"./CommonCodeHighlight.vue?vue&type=script&lang=js&\"\nexport * from \"./CommonCodeHighlight.vue?vue&type=script&lang=js&\"\nimport style0 from \"./CommonCodeHighlight.vue?vue&type=style&index=0&id=03fe23ec&prod&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<script>\r\nimport { Spin, Icon } from 'ant-design-vue'\r\nimport 'highlightjs-line-numbers.js'\r\nimport { CommonUtils } from 'aj-antd-components'\r\nexport default {\r\n  props: {\r\n    path: String,\r\n    value: String,\r\n    title: {\r\n      type: String,\r\n      default: '示例代码',\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      code: '',\r\n      loading: true,\r\n      show: false,\r\n    }\r\n  },\r\n  watch: {\r\n    value(e) {\r\n      this.code = e\r\n    },\r\n  },\r\n  methods: {\r\n    copy() {\r\n      let flag = CommonUtils.copyToClipboard(this.code)\r\n      if (flag) {\r\n        this.$message.success('复制成功')\r\n      }\r\n    },\r\n  },\r\n  async created() {\r\n    let path = this.path\r\n    if (this.path) {\r\n      const res = await fetch(process.env.BASE_URL + 'docs/' + path).then((res) => res.text())\r\n      this.code = res\r\n    } else {\r\n      this.code = this.value\r\n    }\r\n    this.loading = false\r\n    this.$nextTick(() => {\r\n      window.hljs.initLineNumbersOnLoad()\r\n    })\r\n  },\r\n  render() {\r\n    console.log(this.code)\r\n    return (\r\n      <Spin spinning={this.loading} class=\"preview-code\">\r\n        <div class={['wrapper', { show: this.show }]}>\r\n          <h4 class=\"preview-code-title\">{this.title}</h4>\r\n          {this.code && (\r\n            <pre v-highlightjs={this.code}>\r\n              <code class=\"tsx\"></code>\r\n            </pre>\r\n          )}\r\n        </div>\r\n        <div onClick={() => (this.show = !this.show)} class=\"trigger\">\r\n          <Icon type={'arrow-' + (this.show ? 'up' : 'down')} />\r\n          <span>{this.show ? '收起' : '展开'}</span>\r\n        </div>\r\n      </Spin>\r\n    )\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"less\">\r\n.preview-code {\r\n  background: #ffffff;\r\n  border-radius: 6px;\r\n  .hljs-ln-numbers {\r\n    text-align: center;\r\n    color: #ccc;\r\n    border-right: 1px solid #ececec;\r\n    vertical-align: top;\r\n    padding-right: 10px;\r\n\r\n    -webkit-touch-callout: none;\r\n    -webkit-user-select: none;\r\n    -khtml-user-select: none;\r\n    -moz-user-select: none;\r\n    -ms-user-select: none;\r\n    user-select: none;\r\n  }\r\n  .hljs-ln-code {\r\n    padding-left: 10px;\r\n  }\r\n\r\n  /* .hljs-ln-code,\r\n    .hljs-ln-numbers {\r\n      line-height: 14px;\r\n    } */\r\n\r\n  code {\r\n    white-space: pre-wrap;\r\n    overflow: auto;\r\n  }\r\n  .preview-code-title {\r\n    font-size: 16px;\r\n    color: #333333;\r\n  }\r\n  .trigger {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    cursor: pointer;\r\n    padding: 8px 0;\r\n    margin-top: 25px;\r\n    &:hover {\r\n      color: #2196f3;\r\n      background: #fcfcfc;\r\n    }\r\n    span {\r\n      margin-left: 10px;\r\n    }\r\n  }\r\n  .wrapper {\r\n    height: 140px;\r\n    overflow: hidden;\r\n    padding: 15px;\r\n\r\n    &.show {\r\n      height: auto;\r\n    }\r\n  }\r\n}\r\n</style>\r\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./CommonCodeHighlight.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./CommonCodeHighlight.vue?vue&type=script&lang=js&\"","<script>\r\nexport default {\r\n  props: ['title', 'description'],\r\n  render() {\r\n    return (\r\n      <div class=\"app-page gutter common-page\">\r\n        <h3 class=\"app-page-title\">{this.title}</h3>\r\n        <div class=\"page-description\">{this.description}</div>\r\n        <div class=\"page-content\">{this.$slots.default}</div>\r\n      </div>\r\n    )\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"less\">\r\n.common-page {\r\n  background: #ffffff;\r\n  .app-page-title {\r\n    font-size: 20px;\r\n    font-weight: bold;\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n  .page-description {\r\n    font-size: 14px;\r\n    color: #666;\r\n    line-height: 1.5;\r\n    margin-top: 10px;\r\n  }\r\n  .page-content {\r\n    margin-top: 30px;\r\n  }\r\n}\r\n</style>\r\n","var render, staticRenderFns\nimport script from \"./CommonPage.vue?vue&type=script&lang=js&\"\nexport * from \"./CommonPage.vue?vue&type=script&lang=js&\"\nimport style0 from \"./CommonPage.vue?vue&type=style&index=0&id=a811ad92&prod&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./CommonPage.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./CommonPage.vue?vue&type=script&lang=js&\"","var render, staticRenderFns\nimport script from \"./guide.vue?vue&type=script&lang=js&\"\nexport * from \"./guide.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<script>\r\nimport CommonCodeHighlightVue from './CommonCodeHighlight.vue'\r\nimport CommonPageVue from './CommonPage.vue'\r\nexport default {\r\n  render() {\r\n    return (\r\n      <CommonPageVue title=\"简介\" description=\"组件库基于ant-design-vue二次开发，主要是render函数 JSX开发\">\r\n        <h3>安装</h3>\r\n        <p>npm install aj-antd-components --save</p>\r\n        <CommonCodeHighlightVue\r\n          title=\"使用\"\r\n          value={`\r\n\r\n        import vue from 'vue'\r\n        import AComponents from 'aj-antd-components'\r\n        import 'aj-antd-components/dist/antd.min.css'\r\n        import 'ant-design-vue/dist/css'\r\n      \r\n\r\n        vue.use(AComponents,{\r\n            time:{\r\n                iso:false // 默认日期组件值为 iso格式\r\n            },\r\n            select:{\r\n                // select 的handler属性对应这里的实现，返回一个promise，需要resolve一个包含label和value的对象数组\r\n                handler:()=> Promise.resolve([{label:string;value:string;}])\r\n            },\r\n            cascader:{\r\n                // 同select的handler，这里的级联使用children字段\r\n                handler:()=>Promise.resolve([{label:string;value:strin;children:[{...}]}])\r\n            },\r\n            table:{\r\n                page:{\r\n                    // 每页显示条数\r\n                    limit:20,\r\n                    // 默认第一页\r\n                    page:1\r\n                },\r\n                // DataTable组件，这里是请求的具体实现，返回一个 data:{list:[],total:0} 的分页数据结构，如果没有分页 data可以直接为数组\r\n                post:(url,params)=> Promise.resolve(\r\n                    {\r\n                        data:{\r\n                            list:[],\r\n                            total:0\r\n                        }\r\n                }),\r\n                // get请求，默认为post请求\r\n                get:(url,params)=>Promise.resolve(\r\n                    {\r\n                        data:{\r\n                            list:[],\r\n                            total:0\r\n                        }\r\n                }),\r\n                // 要传给到后端的值，asc |desc,在get或post中处理具体的传参\r\n                orderBy:()=> string\r\n            },\r\n            upload:{\r\n                getImageUrl:(uri)=>{\r\n                    return  拼接上传后返回的相对路径，一个完整的图片资源路径\r\n                },\r\n                uploadFile:(file)=>{\r\n                     const res= await 具体的上传函数\r\n                     return 文件上传后的相对路径\r\n                }\r\n            },\r\n            richtext:()=>{\r\n                return {\r\n                    // 富文本自定义上传图片\r\n                    customUploadImg:(files,insertFu)=>{\r\n                        const  res= await 上传函数\r\n                        // 将上传后返回的路径，完整的资源路径传入到insertFu\r\n                        insertFu()\r\n                    },\r\n                    fontNames:[\"微软雅黑\",....],// 支持的字体\r\n                }\r\n            },\r\n        \r\n        })\r\n\r\n        // 如果需要使用字典，需要在store中实现名为“dictionaries”的getter\r\n        store.getters.dictionaries:()=> ({\r\n            // 需要同时实现枚举类型的 map对象和_array数组，才能正确映射\r\n            // 对象的key为枚举字段的value，值为label，主要是方便根据枚举值映射label\r\n            enum_type_key:{value:label},\r\n            // 数组在枚举类型后拼接_array ,用于下拉，checkbox，radio等用途\r\n            enum_type_key_array:[{label:'',value:string;}]\r\n        })\r\n\r\n        `}\r\n        />\r\n\r\n        <CommonCodeHighlightVue title=\"Props\" path=\"install.d.ts\" />\r\n\r\n        <h3>特色</h3>\r\n        <p>\r\n          表单、搜索列表页面，是管理系统中最常见的组件，几乎占比80%。使用JSON配置的方式能使代码降低，效率提高，极少的人力就可以支撑业务快速发展\r\n          <br />\r\n          以下组件是系统开发过程中使用最多的组件\r\n        </p>\r\n\r\n        <h3>表单组件（FormLayout）内置16个常用组件</h3>\r\n        <p>\r\n          支持组件联动隐藏显示、联动组件值变化、动态数组删减(type=arrayList)、快速的必填验证、支持自定义渲染、注册自定义组件\r\n        </p>\r\n\r\n        <h3>输入框（Input）</h3>\r\n        <p>\r\n          支持多种类型的强制校验，number，amount、percentage、text。 由于后端在金额时通常以分来存储数据，其中amount\r\n          会自动转为分，percentage会转为浮点数，避免数据繁琐的转换操作。另外新增了showLimit显示当前输入字符数和总的字符数，在输入手机号，身份证号码时使用较多\r\n        </p>\r\n\r\n        <h3>数据选择（DataSelect）</h3>\r\n        <p>\r\n          支持多种数据源，自定义接口实现（handler），枚举字段（store.getters.dictionaries中实现），直接传入数组\r\n          <br />\r\n          通过接口或者枚举来实现数据源，能更好的将组件模块化，减少业务代码量\r\n          <br />\r\n          通过配置displayStyle= checkbox | radio | select（默认）来展示显示类型\r\n        </p>\r\n        <h3>搜索列表页面(FormTableLayout)</h3>\r\n        <p>通过配置接口地址和表头、搜索项、操作项、状态分组tabs就能快速高效的完成页面开发</p>\r\n      </CommonPageVue>\r\n    )\r\n  },\r\n}\r\n</script>\r\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./guide.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./guide.vue?vue&type=script&lang=js&\""],"names":["w","d","TABLE_NAME","LINE_NAME","CODE_BLOCK_NAME","NUMBERS_BLOCK_NAME","NUMBER_LINE_NAME","DATA_ATTR_NAME","BREAK_LINE_REGEXP","isHljsLnCodeDescendant","domElt","curElt","className","indexOf","parentNode","getHljsLnTable","hljsLnDomElt","nodeName","edgeGetSelectedCodeLines","selection","selectionText","toString","tdAnchor","anchorNode","tdFocus","focusNode","firstLineNumber","parseInt","dataset","lineNumber","lastLineNumber","firstLineText","textContent","lastLineText","tmp","slice","lastIndexOf","selectedText","hljsLnTable","i","codeLineSel","format","codeLineElt","querySelector","addStyles","css","createElement","type","innerHTML","getElementsByTagName","appendChild","initLineNumbersOnLoad","options","readyState","documentReady","addEventListener","blocks","querySelectorAll","hasOwnProperty","isPluginDisabledForBlock","lineNumbersBlock","e","console","error","element","classList","contains","async","lineNumbersInternal","lineNumbersValue","value","document","internalOptions","mapOptions","duplicateMultilineNodes","addLineNumbersBlockFor","inputHtml","lines","getLines","length","trim","pop","singleLine","html","l","startFrom","getSingleLineOption","getStartFromOption","defaultValue","isFinite","getAttribute","toNumber","nodes","childNodes","node","child","getLinesCount","duplicateMultilineNode","test","result","lineText","text","split","match","func","setTimeout","args","replace","m","n","undefined","attrName","hasAttribute","str","fallback","number","Number","hljs","window","getSelection","navigator","userAgent","clipboardData","setData","preventDefault","render","staticRenderFns","props","path","String","title","default","data","code","loading","show","watch","methods","copy","flag","CommonUtils","copyToClipboard","$message","success","created","res","fetch","process","then","$nextTick","h","arguments","log","_Spin","name","click","_Icon","component","description","$slots","CommonPageVue","CommonCodeHighlightVue"],"sourceRoot":""}